{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","map","c","toLowerCase","includes","console","error","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACI,sBAAMC,SAnBW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GACX,OAAIA,EAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,iBAAeC,SAAUX,EAAWU,gBACpDE,QAAQC,MAAM,6BACPN,GAGL,CAAGP,GAAT,mBAAwBO,OAG5BN,EAAc,MAKlB,SACI,uBACIa,KAAK,OACLC,MAAQf,EACRgB,SA3Bc,SAAEb,GACxBF,EAAeE,EAAEc,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKlB,KAAK,SAAAoB,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPM,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAElC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0BpB,mBAAS,CAC/B2B,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAAEnB,IAEEoB,EDhB2BK,CAAczB,GAAlCY,EAAd,EAAQL,KAAcY,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDf,IAElDmB,GAAW,mBAAGJ,UAAU,mCAAb,0BAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOvB,KAAK,SAAAoB,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEqBvBgB,EAnCM,WAGjB,MAAoC9C,mBAAU,CAAC,oBAA/C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQgD,EAAWtC,KAAK,SAAAW,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAWA,GADLA,Y,MCxBlC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.179be77b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n    \r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 )\r\n        {\r\n            setCategories( cats => {\r\n                if( cats.map(c => c.toLowerCase()).includes( inputValue.toLowerCase() ) ) {\r\n                    console.error('La categor√≠a ya existe');\r\n                    return cats;\r\n                }\r\n\r\n                return [ inputValue, ...cats ]\r\n            } );\r\n            \r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ULfx6BtstvzYmNwFJbcw5oFla5XIA2zs&q=${ encodeURI( category ) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*, { useState, useEffect }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando ...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [ category ] );\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = ( ) => {\r\n\r\n    //const [categories, setCategories] = useState( ['One Punch', 'Samurai X', 'Dragon Ball'] );\r\n    const [categories, setCategories] = useState( ['Attack on Titan'] );\r\n\r\n    // const handleAdd = ( category ) => {\r\n    //     // setCategories( [...categories, 'Attack on Titan'] );\r\n    //     setCategories( cats => [ ...cats, category] );\r\n    // }\r\n\r\n    // Para Renderizado\r\n    return (\r\n        <> \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                        //return <li key={ category + i }>{ category }</li>\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}